#!/usr/bin/bash
set -e
function sethostname() {
        local getEC2instanceid=`curl -s http://169.254.169.254/latest/meta-data/instance-id`
        local getEC2instancetag=`/usr/bin/aws ec2 describe-tags --region ap-southeast-1 --filters "Name=resource-id,Values=$getEC2instanceid" --query "Tags[?Key=='Name']" | grep Value | tr -d ' ' | cut -f2 -d: | tr -d '"' | tail -1 `
        local getLocalhost=`hostname`
        if [ "$getLocalhost" == "$getEC2instancetag" ]; then
                echo  -e "\033[32;33mHostname updated, Ignore !!!\033[0m"
        else
                sudo /usr/bin/hostnamectl set-hostname $getEC2instancetag
        fi
}

function sethostnamev2() {
        local getToken=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"`
        local getEC2instanceid=`curl -H "X-aws-ec2-metadata-token: $getToken" -v http://169.254.169.254/latest/meta-data/instance-id`
        local getEC2instancetag=`/usr/bin/aws ec2 describe-tags --region ap-southeast-1 --filters "Name=resource-id,Values=$getEC2instanceid" --query "Tags[?Key=='Name']" | grep Value | tr -d ' ' | cut -f2 -d: | tr -d '"' | tail -1 `
        local getLocalhost=`hostname`
        if [ "$getLocalhost" == "$getEC2instancetag" ]; then
                echo  -e "\033[32;33mHostname updated, Ignore !!!\033[0m"
        else
                sudo /usr/bin/hostnamectl set-hostname $getEC2instancetag
        fi
}

function aptupdate() {
        sudo apt update
        sudo apt remove vim unattended-upgrades -y
        sudo DEBIAN_FRONTEND=noninteractive apt upgrade -y
        sudo DEBIAN_FRONTEND=noninteractive apt install gpg unzip net-tools chrony htop neovim apt-transport-https git curl -y
        sudo apt autoremove -y
}

function settimezone() {
        sudo /usr/bin/timedatectl set-timezone 'Asia/Kuala_Lumpur'
}

function updateprofile() {
        local paths="/root/.bashrc"
        local checkPS=`grep -r "PS1" $paths | grep -v '#'`
        local checkLS=`grep -r "alias ls=" $paths | grep -v '#'`
        local checkLL=`grep -r "alias ll=" $paths | grep -v '#'`
        local checkL=`grep -r "alias l=" $paths | grep -v '#'`
        local checkRM=`grep -r "alias rm=" $paths | grep -v '#'`
        local checkCP=`grep -r "alias cp=" $paths | grep -v '#'`
        local checkMV=`grep -r "alias mv=" $paths | grep -v '#'`
        local checkGREP=`grep "alias grep=" $paths | grep -v '#'`
        local checkSHOPT=`grep "shopt " $paths | grep -v '#'`
        if [ -z "$checkPS" ]; then
                echo  -e "\033[32;33mInsert PS1\033[0m"
                echo "PS1='${debian_chroot:+($debian_chroot)}\u@\[\e[1;32m\]\h\[\e[m\]:\w\$ '" | tee -a $paths
        fi
        if [ -z "$checkLS" ]; then
                echo  -e "\033[32;33mInsert LS\033[0m"
                echo "alias ls='ls --color=always --group-directories-first'" | tee -a $paths
        fi
        if [ -z "$checkLL" ]; then
                echo  -e "\033[32;33mInsert LL\033[0m"
                echo "alias ll='ls -lah --color=always --group-directories-first'" | tee -a $paths
        fi
        if [ -z "$checkL" ]; then
                echo  -e "\033[32;33mInsert L\033[0m"
                echo "alias l='ls -lA --color=always --group-directories-first'" | tee -a $paths
        fi
        if [ -z "$checkRM" ]; then
                echo  -e "\033[32;33mInsert RM\033[0m"
                echo "alias rm='rm -i'" | tee -a $paths
        fi
        if [ -z "$checkCP" ]; then
                echo  -e "\033[32;33mInsert CP\033[0m"
                echo "alias cp='cp -i'" | tee -a $paths
        fi
        if [ -z "$checkMV" ]; then
                echo  -e "\033[32;33mInsert MV\033[0m"
                echo "alias mv='mv -i'" | tee -a $paths
        fi
        if [ -z "$checkGREP" ]; then
                echo  -e "\033[32;33mInsert GREP\033[0m"
                echo "alias grep='grep --color=auto'" | tee -a $paths
        fi
        if [ -z "$checkSHOPT" ]; then
                echo  -e "\033[32;33mInsert SHOPT\033[0m"
                echo "shopt -s histappend" | tee -a $paths
        fi        
}

function updateeditor() {
        sudo update-alternatives --set editor /usr/bin/nvim
        sudo update-alternatives --set vi /usr/bin/nvim
}

function disableipv6() {
        local paths="/etc/default/grub"
        local checkG=`grep -r "ipv6.disable" $paths | grep -v '#'`
        if [ -z "$checkG" ]; then
                echo  -e "\033[32;33mInsert GRUB\033[0m"
                echo 'GRUB_CMDLINE_LINUX="ipv6.disable=1"' | tee -a /etc/default/grub
                grub-mkconfig -o /boot/grub/grub.cfg
        fi
}

echo  -e "\033[32;33mSetup Hostname\033[0m"
if [ -z "`curl -s http://169.254.169.254/latest/meta-data/instance-id`" ]; then
        sethostnamev2
else
        sethostname
fi
echo  -e "\033[32;33mSetup Timezone\033[0m"
settimezone
echo  -e "\033[32;33mAPT update\033[0m"
aptupdate
echo  -e "\033[32;33mUpdate bashrc\033[0m"
updateprofile
echo  -e "\033[32;33mUpdate Editor\033[0m"
updateeditor
echo  -e "\033[32;33mDisable IPv6\033[0m"
disableipv6
